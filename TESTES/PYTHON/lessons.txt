#=============================
number = 5                   =
                             =
if number % 2 == 0:          =
    print("число чётное")    =
else:                        =
    print("число нечётное")  =
#=============================
#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Знак % в Python обозначает операцию взятия остатка от деления двух чисел. 
-------------------------------------------------------------------------
Он называется оператором остатка. 
-----------------------------------
Когда мы пишем выражение a % b, 
мы получаем остаток от деления числа a на число b.
--------------------------------------------------
Например, 
если мы напишем 10 % 3, то результатом будет остаток от деления числа 10 на 3, 
то есть 1. 
Потому что 10 делится на 3 нацело 3 раза, и остается остаток 1.
---------------------------------------------------------------
Этот оператор полезен, 
например, 
для определения четности числа. 
------------------------------------------
Если результат операции a % 2 равен 0, 
то число a четное, иначе оно нечетное.
#+++++++++++++++++++++++++++++++++++++++++
===================================================================================
Циклы позволяют нам выполнять определенные действия многократно. 
----------------------------------------------------------------
В Python есть два основных типа циклов: for и while.
---------------------------------------
Цикл for
--------
Цикл for используется для перебора элементов в некоторой последовательности. 
Например, -------------------------------------------
мы можем использовать цикл for для перебора элементов 
в списке или символов в строке.
-----------------------------------------------------
Вот пример использования цикла for для вывода всех элементов списка:
--------------------------------------------------------------------
#------------------------------------------
fruits = ["яблоко", "банан", "апельсин"]

for fruit in fruits:
    print(fruit)
----------------
яблоко
банан
апельсин
#-----------------------------------------------------------------
В этом примере переменная fruit последовательно принимает значение 
каждого элемента списка fruits, и для каждого значения выполняется 
блок кода внутри цикла for, 
который выводит значение переменной fruit на экран.
#------------------------------------------------------------------
Цикл while
------------------------------------------
Цикл while выполняет блок кода до тех пор, 
пока некоторое условие истинно. 
Например:---------------------------------
x = 0

while x < 5:
    print(x)
    x += 1
-----------------------------------------
0
1
2
3
4
#----------------------------------------
В этом примере 
блок кода внутри цикла while будет выполняться, 
пока переменная x меньше 5. 
На каждой итерации переменная x увеличивается на 1.
#===================================================
Прерывание цикла
Иногда нам может потребоваться прервать выполнение цикла до его завершения. 
Для этого мы можем использовать оператор break. 
Например:------------------------------------------------------------------
x = 0

while True:
    print(x)
    x += 1
    if x == 5:
        break
----------------
0
1
2
3
4
#===================
В этом примере цикл while будет выполняться бесконечно 
(так как условие True всегда истинно), 
но благодаря оператору break мы можем выйти из цикла, 
когда x достигнет значения 5.
#=============================================================================
for i in range(1, 6):
    print(i)
-----------------------
1
2
3
4
5
#======================
Этот код выведет числа от 1 до 5 включительно. 
Функция range(1, 6) 
создает последовательность чисел от 1 до 5.
#=============================================
Теперь давай попробуем использовать цикл while 
для вывода квадратов чисел от 1 до 5:
#------------------------------------
x = 1

while x <= 5:
    print(x * x)
    x += 1
------------------
1
4
9
16
25
-------------------------------------------------------------
Этот код будет выводить квадраты чисел от 1 до 5 включительно.
#============================================================
Теперь давай посмотрим, как использовать оператор break для прерывания цикла. 
Например, 
мы можем использовать цикл while, 
чтобы найти первое число в последовательности Фибоначчи, 
большее 100:----------------------------------------------------------------
----------------------------------------------------------------------------
a, b = 0, 1

while True:
    print(b)
    a, b = b, a + b
    if b > 100:
        break
--------------------------
1
1
2
3
5
8
13
21
34
55
89
Этот код будет выводить числа Фибоначчи, пока следующее число не превысит 100.
#============================================================================




